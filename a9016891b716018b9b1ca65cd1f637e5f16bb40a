{
  "comments": [
    {
      "key": {
        "uuid": "c62fed45_6356da33",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-03T01:15:38Z",
      "side": 1,
      "message": "We do have already this functionality in Gerrit for secure.config.\nCan we reuse it instead of using passwords in project.config and reinventing the encryption?",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c8a1616_b74b5f83",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-02-14T16:26:55Z",
      "side": 1,
      "message": "In order to use the secure.config per project, we will eventually need to put the secure.config under refs/meta/config, which is contrary to the initial motive of moving it to secure.config.",
      "parentUuid": "c62fed45_6356da33",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c95d1c4d_12a7f603",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-14T18:05:51Z",
      "side": 1,
      "message": "Why not allowing the project UX to enter the password and then store it into secure.config?\nWe do something similar in GerritHub, not for the Jira integration but for other credentials.",
      "parentUuid": "7c8a1616_b74b5f83",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc7af729_125c2004",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-03-02T20:11:06Z",
      "side": 1,
      "message": "We are partially doing the same as you suggested. We let the user enter the password and then store in the project.config. The same can be stored in secure.config but as there is only one secure.config file, I am not sure how it would work for multiple users to access multiple instances using that one file and we need to think of a way to access the correct username-password pair if we are going to store all the passwords in one secure.config file. This makes it more complex.",
      "parentUuid": "c95d1c4d_12a7f603",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c89885e7_8b5129a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-03-06T12:55:21Z",
      "side": 1,
      "message": "My experience is that password management is a business critical point and is typically managed according to the Company\u0027s Security Standards. Having a centralized place where policies are defined and enforced is a plus of Gerrit overall.\n\nAdditionally, the encryption is already implemented in the Secure Store plugin, why are you reinventing the wheel? With regarding to complexity, it actually isn\u0027t that complex after all. You do not have to implement the encryption but just use a Secure Store and Gerrit will do the rest.\n\nLast but not least, you could have as well a secure.config inside the refs/meta/config managed as Secure Store: that would solve the multi-master issues.",
      "parentUuid": "dc7af729_125c2004",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9e61a2b_905bc720",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-03-06T15:27:21Z",
      "side": 1,
      "message": "\u003e Additionally, the encryption is already implemented in the Secure\n \u003e Store plugin, why are you reinventing the wheel? With regarding to\n \u003e complexity, it actually isn\u0027t that complex after all. You do not\n \u003e have to implement the encryption but just use a Secure Store and\n \u003e Gerrit will do the rest.\n\nMaybe I am missing something here but AFAIK, secure.config is supported only for gerrit.config and \u003cplugin\u003e.config which are global config. This is not supported at the project level.",
      "parentUuid": "c89885e7_8b5129a2",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68997464_30ba37a3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-03-06T16:36:21Z",
      "side": 1,
      "message": "The SecureStore is an abstract class and there is an example of InMemorySecureStore as well to get inspiration. It should be quite easy to extend to project-level storage of the encrypted config and it would be useful for other scenarios as well.",
      "parentUuid": "d9e61a2b_905bc720",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb1ce931_8ff422ab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-03-06T16:39:28Z",
      "side": 1,
      "message": "And what will happen if secure store plugin is not installed, we end up storing a clear text password at the project level?",
      "parentUuid": "68997464_30ba37a3",
      "range": {
        "startLine": 20,
        "startChar": 36,
        "endLine": 21,
        "endChar": 52
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd881c2c_96f3484c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-03T01:15:38Z",
      "side": 1,
      "message": "To be put into secure.config.\nproject.config is stored in the Git repository refs/meta/config and it should never contain credentials but only meta-data and configuration.",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 18
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2791873_e1fd9e8a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-02-14T16:26:55Z",
      "side": 1,
      "message": "As mentioned in the above comment, secure.config will need to be put in refs/meta/config to make it work on the project level, which defeats the purpose of putting the password in secure.config which will eventually end up in refs/meta/config.\n\nThe way it is implemented now, it does not store the plaintext password in the project.config but stores the encrypted form of the password. So, in light of this, IMO this current solution will work better than having the plain password in secure.config. Please provide your opinion aspect. :)",
      "parentUuid": "bd881c2c_96f3484c",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 18
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64d1b58e_475a7d26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 29,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-14T18:05:51Z",
      "side": 1,
      "message": "secure.config is not plaintext: you can plug a secure store and have them encrypted.",
      "parentUuid": "d2791873_e1fd9e8a",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 18
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd91ff27_a78dcebb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-03T01:15:38Z",
      "side": 1,
      "message": "Change is against its-base/master. At the moment its-jira/master is compatible with Gerrit 2.14, 2.15 and master. Relying on the its-base change would force us to create two additional branches for its-jira (stable-2.14 and stable-2.15).\n\nIt can be done, but you guys won\u0027t be able to have an active development on its-jira for Gerrit v2.14 :-(",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15946e83_82ce013a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1055597
      },
      "writtenOn": "2018-02-14T16:26:55Z",
      "side": 1,
      "message": "I completely understand your point. I think, if the added value of this feature is good enough, we might as well create different branches just like we have for other plugins. As this is the most demanded and most awaited feature in its-jira, it might be worth having to create branches and include this feature.\n\nForgive me If I my understanding is not correct, usually the stable branches are not changed much right except the bug fixes or other minor changes to keep that version working. If this is true, then we will not have much of a problem with different branches.\n\nWaiting for a positive response. :)",
      "parentUuid": "bd91ff27_a78dcebb",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb27810_256a5ebc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-14T18:05:51Z",
      "side": 1,
      "message": "True, we need to keep on innovating on its-jira and, why not, having the \"innovation\" compatible with multiple versions of Gerrit. You guys need this in Gerrit v2.14 correct?\n\nWhy don\u0027t we have ITS-Jira version itself (stable-its-jira-1.0) and then cross-compile for multiple Gerrit versions?\n\nThen this change could stay on master and have a stable-its-jira-1.0 with less risky and backward-incompatible changes and fixes.",
      "parentUuid": "15946e83_82ce013a",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a55e02e4_26010f7f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-02-15T15:16:13Z",
      "side": 1,
      "message": "\u003e True, we need to keep on innovating on its-jira and, why not, having the \"innovation\" compatible with multiple versions of Gerrit. You guys need this in Gerrit v2.14 correct?\n\nHaving this change only on master is not an issue. Don\u0027t worry for us, we need to have a fork of its-jira anyway for the standalone build, we will just add this change on top of it :)\n\n\u003e Why don\u0027t we have ITS-Jira version itself (stable-its-jira-1.0) and then cross-compile for multiple Gerrit versions?\n\nThis will make this plugin build even more complex to understand, my vote goes for keeping things simple. Because its* plugins reject new features on stable branches, you need to wait to upgrade gerrit and plugins to get new features.\n\n\u003e Then this change could stay on master and have a stable-its-jira-1.0 with less risky and backward-incompatible changes and fixes.\n\nYou maintain that plugin so the decision is yours but as I mentioned before, we need to fork its-jira anyway to include a standalone build so we will not use this branch.",
      "parentUuid": "8fb27810_256a5ebc",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d91799ab_21ede53a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2018-02-15T23:04:20Z",
      "side": 1,
      "message": "\u003e \u003e True, we need to keep on innovating on its-jira and, why not, having the \"innovation\" compatible with multiple versions of Gerrit. You guys need this in Gerrit v2.14 correct?\n\u003e \n\u003e Having this change only on master is not an issue. Don\u0027t worry for us, we need to have a fork of its-jira anyway for the standalone build, we will just add this change on top of it :)\n\nGood, so I\u0027d create a stable-branch and we can carry on with this change on master.\n\n\u003e \n\u003e \u003e Why don\u0027t we have ITS-Jira version itself (stable-its-jira-1.0) and then cross-compile for multiple Gerrit versions?\n\u003e \n\u003e This will make this plugin build even more complex to understand, my vote goes for keeping things simple. Because its* plugins reject new features on stable branches, you need to wait to upgrade gerrit and plugins to get new features.\n\nSounds good: let\u0027s keep it simple then.\n\n\u003e \n\u003e \u003e Then this change could stay on master and have a stable-its-jira-1.0 with less risky and backward-incompatible changes and fixes.\n\u003e \n\u003e You maintain that plugin so the decision is yours but as I mentioned before, we need to fork its-jira anyway to include a standalone build so we will not use this branch.\n\nActually, looking at gerrit-analytics for the its-jira plugin, you guys are the #2 contributors of this plugin (see https://gerrit-analytics.gerritforge.com/kibana/goto/c1ed9e2eb32f6cbfcee670339aea1005).\n\nI am more than happy to add Hector as maintainer as well from Ericsson. Having more maintainers allows the project to evolve more quickly.",
      "parentUuid": "a55e02e4_26010f7f",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e9443e3_d1ce8384",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 48,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2018-02-16T02:44:22Z",
      "side": 1,
      "message": "\u003e I am more than happy to add Hector as maintainer as well from\n \u003e Ericsson. Having more maintainers allows the project to evolve more\n \u003e quickly.\n\nThank you Luca",
      "parentUuid": "d91799ab_21ede53a",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "a9016891b716018b9b1ca65cd1f637e5f16bb40a",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}